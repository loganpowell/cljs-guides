{"version":3,"file":"ajax.xml_http_request.js","sources":["ajax/xml_http_request.cljs"],"mappings":"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","names":["ajax.xml-http-request/ready-state","e","G__36449","fexpr__36448","ajax.xml-http-request/append","current","next","ajax.xml-http-request/process-headers","header-str","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","headers","header-line","goog.string/isEmptyOrWhitespace","key-value","goog.string/splitLimit","cljs.core.update.cljs$core$IFn$_invoke$arity$4","ajax.xml-http-request/xmlhttprequest","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/*target*","xmlhttprequest","js/require","goog.object/set","js/global","js/window","cljs.core/PROTOCOL_SENTINEL","p__36451","map__36452","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$3","this","uri","method","body","timeout","with-credentials","response-format","handler","p1__36450#","temp__5457__auto__","response-type","cljs.core/name","seq__36454","cljs.core/seq","chunk__36455","count__36456","i__36457","vec__36458","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/chunked-seq?","c__4319__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__36461","cljs.core/first","cljs.core/next","k","v","or__3922__auto__","header"],"sourcesContent":["(ns ajax.xml-http-request\n  (:require [ajax.protocols :refer [AjaxImpl AjaxRequest\n                                    AjaxResponse Interceptor]]\n            goog.string))\n\n(defn ready-state [e]\n  ({0 :not-initialized\n    1 :connection-established\n    2 :request-received\n    3 :processing-request\n    4 :response-ready} (.-readyState (.-target e))))\n\n(defn append [current next]\n  (if current\n    (str current \", \" next)\n    next))\n\n(defn process-headers [header-str]\n  (if header-str\n    (reduce (fn [headers header-line]\n              (if (goog.string/isEmptyOrWhitespace header-line)\n                headers\n                (let [key-value (goog.string/splitLimit header-line \": \" 2)]\n                  (update headers (aget key-value 0) append (aget key-value 1)))))\n            {}\n            (.split header-str \"\\r\\n\"))\n    {}))\n\n(def xmlhttprequest\n  (if (= cljs.core/*target* \"nodejs\")\n    (let [xmlhttprequest (.-XMLHttpRequest (js/require \"xmlhttprequest\"))]\n      (goog.object/set js/global \"XMLHttpRequest\" xmlhttprequest)\n      xmlhttprequest)\n    (.-XMLHttpRequest js/window)))\n\n(extend-type xmlhttprequest\n  AjaxImpl\n  (-js-ajax-request\n    [this\n     {:keys [uri method body headers timeout with-credentials\n             response-format]\n      :or {with-credentials false\n           timeout 0}}\n     handler]\n    (set! (.-withCredentials this) with-credentials)\n    (set! (.-onreadystatechange this)\n          #(when (= :response-ready (ready-state %))\n             (handler this)))\n    (.open this method uri true)\n    (set! (.-timeout this) timeout)\n;;; IE8 needs timeout to be set between open and send\n;;; https://msdn.microsoft.com/en-us/library/cc304105(v=vs.85).aspx\n    (when-let [response-type (:type response-format)]\n      (set! (.-responseType this) (name response-type)))\n    (doseq [[k v] headers]\n      (.setRequestHeader this k v))\n    (.send this (or body \"\"))\n    this)\n  AjaxRequest\n  (-abort [this] (.abort this))\n  AjaxResponse\n  (-body [this] (.-response this))\n  (-status [this] (.-status this))\n  (-status-text [this] (.-statusText this))\n  (-get-all-headers [this]\n    (process-headers (.getAllResponseHeaders this)))\n  (-get-response-header [this header]\n    (.getResponseHeader this header))\n  (-was-aborted [this] (= 0 (.-readyState this))))\n"]}